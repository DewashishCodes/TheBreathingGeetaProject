# frontend/vite-project/nginx.conf

# Define a server that listens on port 80, the standard web port inside the container.
server {
  listen 80;
  server_name localhost; # The server name inside the container

  # --- Rule 1: API Reverse Proxy ---
  # This is the most important rule. Any request from the browser that starts with /api/
  # will be intercepted by Nginx and forwarded to our backend container.
  location /api/ {
    # 'backend' is the service name we defined in docker-compose.yml.
    # Docker's internal DNS will resolve this to the backend container's IP address.
    proxy_pass http://backend:8000/;

    # These headers are standard best practice for reverse proxies.
    # They pass along important information about the original request to the backend.
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
  }

  # --- Rule 2: React Application Serving ---
  # This is the default rule for any request that DOES NOT start with /api/.
  location / {
    # This is the directory inside the Nginx container where our React build files are located.
    root /usr/share/nginx/html;

    # This line is crucial for single-page applications (like React Router).
    # It tells Nginx:
    # 1. First, try to find an exact file matching the URL ($uri).
    # 2. If not, try to find a directory matching the URL ($uri/).
    # 3. If neither exists, fall back and serve the main index.html file.
    # This allows React Router to handle all the page navigation on the client-side.
    try_files $uri $uri/ /index.html;
  }
}